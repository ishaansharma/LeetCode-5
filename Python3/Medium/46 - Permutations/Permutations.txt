46. Permutations

  Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.
  
  Constraints:
  1 <= nums.length <= 6
  -10 <= nums[i] <= 10
  All the integers of nums are unique.


Thought Process
- I want to return all possible permutations.
  - I can use recursion backtracking.
- I have to check if the length of my list of integers is equal to the length of 'nums'.  
  - If it is, I can add it to my result variable, 'res'.
- I can use a for loop to iterate through the array of integers.
  - If number is already in the current array, 'cur', I want to ignore it and continue.
  - If not, I can add it to my current array.
 
 Diagram for example question: [1,2,3]
 
                                                      []
                                     [1]              |              []
                            [1,2]     |    [1,3]               [2]           |              []
                    [1,2,3]                   [1,3,2]   [2,1]     [2,3]         [3]                   []
                                                       [2,1,3]      [2,3,1]   [3,1]    |  [3,2]         
                                                                              [3,1,2]   [3,2,1]
 Final Answer: [[1,2,3], [1,3,2], [2,1,3],[2,3,1],[3,1,2],[3,2,1]]
 
 Time Complexity - O(n 2^n)
 Space Complexity - O(2^n)
 - where n is equal to the length of distinct integers
