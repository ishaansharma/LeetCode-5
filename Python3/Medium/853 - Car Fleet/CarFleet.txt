853. Car Fleet

There are n cars going to the same destination along a one-lane road. The destination is target miles away.

You are given two integer array position and speed, both of length n, where position[i] is the position of 
the ith car and speed[i] is the speed of the ith car (in miles per hour). 
A car can never pass another car ahead of it, but it can catch up to it and drive bumper to bumper at the same speed. 
The faster car will slow down to match the slower car's speed. 
The distance between these two cars is ignored (i.e., they are assumed to have the same position).
A car fleet is some non-empty set of cars driving at the same position and same speed. Note that a single car is also a car fleet.
If a car catches up to a car fleet right at the destination point, it will still be considered as one car fleet.
Return the number of car fleets that will arrive at the destination.



Time Complexity - O(nlogn), because of sorted array
Space Complexity - O(n), where n is the length of the input array


Thought Process
- I want to find the number of car fleets that will arrive at the destination.
- Before coding, I have to note that two cars become a car fleet if they catch up with each other.
  - I have to find the time that it takes for the cars to reach the finish line.
    - The time will be found by subtracting the target by the position of the car divided by the speed
    of the car. (target - position) / speed
- I want to iterate through the sorted reverse list of the two integer array and append each array's time to a stack.
  - Thus, I am starting with the two integer array that is closest to the finish line (target).
  - If the top of the stack's value is less than or equal to the second from the top's value, this means that 
  the second car has caught up to the first car.
    - In other words, if the time it takes for the second car is faster than the time it takes for the first car
    to reach the finish line, I can pop the first value, since their time are going to be the same anyways after 
    the speed of the second car is adjusted to be the speed of the first car.
- After iterating through the entire list of two integer arrays, I can return the length of the stack, which represents
how many car fleets there are.
