124. Binary Tree Maximum Path Sum

  A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

  The path sum of a path is the sum of the node's values in the path.

  Given the root of a binary tree, return the maximum path sum of any non-empty path.
  
  Constraints:

  The number of nodes in the tree is in the range [1, 3 * 104].
  -1000 <= Node.val <= 1000
  
Time Complexity - O(n)              Space Complexity - O(n)
- where n is the amount of nodes in the tree


Thought Process
- I can use a postorder DFS to work my way up.
- An important note is that if the value of the node is negative, then I don't have
to care about it, because I am trying to find the maximum path sum.
- Another note is that I have to choose between the left and right node when traversing upwards.
  - I can choose between left and right node by simply choosing the node with the larger value.
- I am going to need a variable that will keep track of the max sum.
  - The max sum will be found by taking the left branch, right branch, node, and adding them
  all together.
  
